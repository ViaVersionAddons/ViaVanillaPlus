plugins {
	id 'fabric-loom' version '1.4-SNAPSHOT'
	id 'maven-publish'
	id 'com.modrinth.minotaur' version '2.+'
}

version = "${project.mod_version}+mc${project.minecraft_version}"
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	exclusiveContent {
		forRepository {
			maven {
				name = 'Modrinth'
				url = 'https://api.modrinth.com/maven'
			}
		}
		filter {
			includeGroup 'maven.modrinth'
		}
	}

	maven {
		name = "Jitpack"
		url = "https://jitpack.io"
	}
	maven {
		name = 'ViaVersion'
		url = 'https://repo.viaversion.com/'
	}
	maven {
		name = "Lenni0451"
		url = "https://maven.lenni0451.net/everything"
	}
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/releases"
	}
	maven {
		name = "OpenCollab Snapshots"
		url = "https://repo.opencollab.dev/maven-snapshots/"
	}

	maven {
		url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1"
	}
}

loom {
    splitEnvironmentSourceSets()

	mods {
		"viavanillaplus" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "maven.modrinth:carpet:${project.carpet_version}"
//	implementation "com.viaversion:viaversion:${project.viaversion_version}"
	modImplementation "de.florianmichael:viafabricplus:${project.viafabricplus_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	// modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
	// Uncomment the following line to enable the deprecated Fabric API modules. 
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"

	modRuntimeOnly('me.djtheredstoner:DevAuth-fabric:1.1.0') {
		transitive = false
	}
	runtimeOnly 'me.djtheredstoner:DevAuth-common:1.1.0'
}

processResources {
	inputs.property "version", project.version
	inputs.property "mcversions", project.fmj_mcversions

	filesMatching("fabric.mod.json") {
		expand "version": project.version, "mcversions": project.fmj_mcversions
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

modrinth {
	if (System.getenv('MODRINTH_TOKEN') == null && project.hasProperty('modrinthKey')) {
		token = project.modrinthKey
	}
	projectId = 'viavanillaplus'
	uploadFile = remapJar
	gameVersions.set(project.modrinth_mcversions.split(',').toList())
	loaders = ['fabric', 'quilt']
	dependencies {
		optional.project 'viafabricplus'
		optional.project 'viafabric'
		optional.project 'carpet'
		optional.project 'syncmatica'
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
